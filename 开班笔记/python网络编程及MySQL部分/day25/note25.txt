1.索引分类
	1.普通索引(index)
		使用规则：
			1.一个表中可以有多个index字段
			2.字段的值可以有重复，也可以为NULL值
			3.经常把做查询条件的字段设置为index字段
			4.index字段的key标识为:MUL
		
		创建普通索引：
			1.在创建表时创建index
				create table 表名(
				id int,
				name varchar(15),
				index(id),
				index(name)
				);
			2.在已存在的表中添加索引字段
				create index 索引名 on 表名(字段名);
				注：索引名一般和字段名一样
		
		查看普通索引：
			1.desc 表名：-->查看KEY标志为NULL
			2.show index from 表名\G；
		
		删除普通索引：
			drop index 索引名 on 表名
			注：删除普通索引只能一个一个删除

	2.唯一索引(unique)
		使用规则：
			1.一个表中可以有多个unique字段
			2.unique字段的值不允许重复，可以为空值NULL
			3.unique的KEY标志为 UNI
		
		创建唯一索引（基本等同index创建）
			1.创建表时创建unique
				1.unique(字段名)
				2.字段名 数据类型 unique
			2.在已有表中添加unique
				create unique index 索引名 on 表名(字段名);
			3.查看、删除唯一索引
				desc 表名;
				show index from 表名;
				drop index 索引名 on 表名;
		
	3.主键索引(primary key) && 自增长属性(auto_increment)
		使用规则：
			1.一个表中只能有一个主键字段
			2.对应字段的值不允许重复且不能为空值NULL
			3.主键字段的KEY标志为 PRI
			4.把表中能够唯一标识一条记录的字段设置为主键，通常把表中记录
			  编号的字段设置为主键
		
		创建主键（PRI）:
			1.创建表时创建PRI
				方法一:字段名字段名 数据类型 primary key auto_increment，
				方法二：id int auto_increment,
						... ...,
						primary key(id)
				注：primary key(id,name) -->复合主键
				
				create table 表名(
				id int primary key auto_increment,
				name varchar(15)
				)auto_increment=1000;-->设置自增长属性的起始值
			2.在已有表中添加主键
				alter table 表名 add primary key(字段名);
		
		删除主键：
			1.先删除自增长属性(修改字段属性)
				alter table 表名 modify id int;
			2.再删除主键
				alter table 表名 drop primary key;
		
	4.外键索引
		外键：让当前表字段的值在另一个表的范围内选择
		语法格式：
			foreign key(参考字段名)
			references 被参考表名(被参考字段名)
			on delete cascade(级联动作)
			on update cascade(级联动作)
		
		级联动作：
			1.cascade:数据级联更新
				当主表删除记录或者更新被参考字段的值时，从表会级联更新
			2.restrict 默认
				当删除主表记录时，如果从表中有相关联记录则不允许主表删除
				更新同理
			3.set null
				当主表删除记录时，从表中相关联记录的参考字段值自动设置为
				NULL
				更新同理
			4.no cation
				on delete no action
				on update no cation
				同restrict,都是立即检查外键限制
				
		案例：
			表1、缴费信息表(财务)
				学号	姓名	班级	缴费金额
				1		唐伯虎  AID01   28000
				2		秋香    AID01   20000
			表2、学生信息表(班主任)
				学号	姓名	缴费金额
				1		唐伯虎	28000
				2		秋香	20000
			
			创建缴费信息表(主表)
				create table jftab(
				id int primary key,
				name char(15),
				class char(5),
				money int
				)default charset=utf8;
				
				insert into jftab values
				(1,'唐伯虎','AID01',28000),
				(2,'秋香','AID01',20000),
				(3,'祝枝山','AID01',22000);
			
			创建学生信息表(从表)
				create table bjtab(
				stu_id int,
				name char(15),
				money int,
				foreign key(stu_id) references jftab(id)
				on delete cascade
				on update cascade
				);
		
		删除外键：
			alter table 表名 drop foreign key 外键名;
			注：外键名的查看
				show create table 表名；
		
		在已有表中添加外键：
			alter table 表名 add foreign key(参考字段名)
			references 被参考表名(被参考字段名)
			on delete 级联动作
			on update 级联动作;
		
		外键使用规则
			1.两张表被参考字段和参考字段数据类型要一致
			2.被参考字段必须是key的一种，通常是primary key

2.数据的导入
	作用：
		把文件系统的内容导入到数据库中
	语法：
		load data infile '文件名'
		into table 表名
		fields terminated by '分隔符'
		lines terminated by '\n'
	示例：
		把/etc/passwd文件中的内容导入数据库中(indexdb库中的userinfo表)
		tarena : x : 1000 : 1000 : tarena,,, : /home/tarena : /bin/bash
		                           用户描述                   登录权限
		
		操作步骤
			1.创建表
				create table userinfo(
				username char(20),
				password char(1),
				uid int,
				gid int,
				comment varchar(50),
				homedir varchar(50),
				shell varchar(50)
				);
			2.将要导入的文件拷贝到数据库的默认搜索路径中
				1.查看数据库的默认搜索路径
					show variables like 'secure_file_priv';
					/var/lib/mysql-files
				2.将要导入数据的文件拷贝到默认搜索路径里
					sudo cp /etc/passwd /var/lib/mysql-files/passwd
			3.执行数据库导入语句
				load data infile '/var/lib/mysql-files/passwd'
				into table userinfo
				fields terminated by ':'
				lines terminated by '\n';

3.数据的导出
	作用：
		将数据库表中的记录保存到系统文件里
	语法格式：
		select ... from 表名
		into outfile '文件名'
		fields terminated by '分隔符'
		lines terminated by '分隔符'(一般为'\n')
	示例：
		把userinfo表中的username password 和uid 导出到文件user.txt
			select username,password,uid from userinfo
			into outfile '/var/lib/mysql-files/user.txt'
			fields terminated by ','
			lines terminated by '\n';

4.表的复制
	语法格式：
		create table 表名 select 查询命令;
	示例：
		复制userinfo 表中的全部记录,userinfo2
			create table userinfo2 select * from userinfo;
	
	复制表的结构
		create table 表名 select ... from 源表名 where false;
	
	注意：
		复制表的时候不会把原有表的key属性复制过来

5.嵌套查询(子查询)
	定义：
		把内层的查询结果作为外层的查询条件
	示例：
		把uid的值小于uid平均值的用户名和uid号显示出来
			->select username,uid from userinfo
			->where
			->uid < select avg(uid) from userinfo;

6.连接查询
	内连接
		定义：从表中删除与其他被连接的表中没有匹配到的行
		语法格式：
			select 字段名列表 from 表1
			inner join 表2 on 条件
			inner join 表3 on 条件
			...;
		示例：
			1.显示省市的详细信息
				-> select 省.s_name,市.c_name from 省
				-> inner join 市
				-> on 省.s_id = 市.cfather_id;
			2.显示省市县的详细信息
				-> select 省.s_name,市.c_name from 省
				-> inner join 市
				-> on 省.s_id = 市.cfather_id
				-> inner join 县
				-> on 市.c_id = 县.xfather_id;
	外连接
		1.左连接
			定义：以左表为主显示查询结果
			语法格式：
				select 字段名列表 from 表1
				left join 表2 on 条件
				left join 表3 on 条件
				...;
			示例：
				1.以省表为主显示省市县详细信息
					-> select 省.s_name,市.c_name from 省
					-> left join 市
					-> on 省.s_id = 市.cfather_id
					-> left join 县
					-> on 市.c_id = 县.xfather_id;
		2.右连接
			定义：以右表为主显示查询结果
			语法格式：
				select 字段名列表 from 表1
				right join 表2 on 条件
				right join 表3 on 条件
				...;

7.多表查询
	select 字段名列表 from 表名列表; #笛卡尔积
	select 字段名列表 from 表名列表 where 条件 #等同内连接