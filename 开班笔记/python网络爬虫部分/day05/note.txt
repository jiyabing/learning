新浪微博数据抓取：
    微信的数据相对比较封闭，微博的数据是比较开放的，可以抓取的数据信息：
        1.人的信息，关注列表，粉丝列表
            可以从一个大V作为入口来抓，
            粉丝（越多越好）/关注（越少越好），
            博文太少不值得抓，太多要考虑一下是否是微商或者广告
        2.微博上博文的信息
            可以参考这篇文章的点赞数量，评论数量，转发数量等待来决定这篇
            博文是否要抓取；
    思考：怎么甄别僵尸粉？

抓取的过程：
    1.需要登录进行
    2.给定一个大V入口，比如姚晨的微博入口，来进去抓取；
    3.抓取人的信息和博文信息；
        1.把关注的人的入口地址做成一个队列，以便获取微博要爬取的内容；
        2.可以尝试用两个不同的进程，开启两个浏览器，分别进行博文和人的信息抓取，
        以提升效率；
    4.技术上还需要解决：
        翻页：找到href，直到找不到下一页信息；

cookie,session作用？
    用户曾经访问过这个网站，我们需要在http协议之外用一些额外的信息和技术来标识
    这个用户曾经来过，为了让用户体验更好；所以我们的爬虫程序可以巧妙的利用这个
    漏洞来达到登录获取信息的效果。
    
面试题：
    输入参数n,n=4时
    输出：
    10 11 12 1
    9  16 13 2
    8  15 14 3
    7  6  5  4

在python中做高维度的矩阵运算，使用原生的list效率很低下，所以我们需要借助第三方
的库来帮助我们完成高性能的运算。我们可以使用numpy
import numpy as np
# 建立了一个维度是4*4的矩阵，
# dtype表达的是数据类型，是c语言中的整数类型
# 用16位表达一个整数；
myarray = np.zeros((4, 4), dtype=np.int16)


myarray
Out[6]: 
array([[0, 0, 0, 0],
       [0, 0, 0, 0],
       [0, 0, 0, 0],
       [0, 0, 0, 0]], dtype=int16)
       
    myarray = np.zeros((n, n), dtype=np.int16)   
    num = 1
    i = 0 #行标
    j = 0 #列标
    myarray[i][j] = 1
    while num <= n*n:
        #第一步：上---下；
        while (i+1) < n and myarray[i+1][j] == 0:
            i += 1
            num += 1
            myarray[i][j] = num
        第二步：右---左；
        第三步：下---上；
        第四步：左---右；