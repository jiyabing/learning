bytearray 方法
    Ba = bytearray('abcde',encoding='utf-8')
    Ba.clear()清空字节数组
    Ba.append(n)追加一个字节（n为0-255的整数）
    Ba.remove(value)删除第一个出现的字节，如果没有出现，则触发ValueError错误
    Ba.reverse()字节的顺序反转
    Ba.decode(encoding='utf-8')将bytearray转换为字符串（返回）
    Ba.find(sub[,start[,end]])查找sub字节数组，返回索引

文件
    什么是文件
        文件是用于数据存储的单位
        文件通常用来长期存储设置
        文件中的数据是以字节为单位进行顺序存储的

    内存的读写速度快，磁盘的读写速度慢

文件的操作步骤：
    打开文件
    读写文件
    关闭文件

    文件的打开函数 open
    open(file,mode='rt')
    用于打开一个文件，返回 文件流 对象，如果打开失败会触发IOError错误

    文件的关闭方法
    f.close()  关闭文件，释放系统资源
    示例见：
        file_open.py

    文件操作分为两种类型的操作：
        文本文件操作
        二进制文件操作

        文本文件模式：
            mode = 't'
            1.默认文件中存储的内容为字符数据，以行为单位读取，采用系统默认的
              换行符进分割
            2.对于文本文件的读写，需要用字符串(str)进行读取和写入数据

    各操作系统默认的换行符：
        Linux 换行符 '\n'
        windows 换行符 '\r\n'
        旧的Macintosh 换行符 '\r'
        新的Mac os 换行符 '\n'

练习1：
    读取data.txt文件的内容，并将打印如下格式：
        姓名：小王 电话：13777777777

    见 code 内的 lianxi1

练习2：
    1）写一个程序，读入任意行的文字信息，当输入空行是结束输入，将读入的字符串
       存在列表中，然后将列表里的内容写入文件input.txt中

       见 code 内的 lianxi2-1

    2）写一个程序，从input.txt中读取之前输入的数据，存入列表中，再加上行号进行
       打印显示
           第1行：xxxxx
           第2行：xxxxx
           ...

       见 code 内的 lianxi2-2

    二进制文件操作：
        打开模式：'b'
        默认文件中存储的都是以字节为单位的二进制数据，通常有人为规定的格式，
        需要以字节为单位进行读写
        对二进制文件的读写，需要用字节串(bytes)进行操作

    f.read(n)
    对二进制文件 返回字节串，n为最大字节数
    
    f.readline()
    对二进制文件 返回字节串
    
    f.readlines()
    对于二进制文件 返回字节数组

    f.write(x)
    对二进制文件 x必须为字节串

    f.seek(offset,whence=0) 函数
        offset 偏移量
            大于0的数代表向文件末尾方向移动
            小于0的数代表向文件头方向移动
        whence 相对位置
            0 代表从文件头开始偏移
            1 代表从当前位置开始偏移
            2 代表从文件尾开始偏移
        示例：
        f.seek(10,0) #将光标从文件头向右移动了10位
        f.seek(5,1)  #将光标从当前位置向右移动了5位
        f.seek(-10,2)#将光标从文件尾向作移动了10位
       
汉字编码：
    国标系列：
        GB18030（2字节或4字节编码，共27533）
            GBK (2字节编码，共21003个)
                GB2312(2字节编码，共6763个汉字)
        常用于windows

    国际标准：
        UNICODE16/UNICODE32  <<--->> UTF-8
        常用于Linux /Mac OS X /IOS /Android

    编码字符串:(用于encode和decode方法中)
        'gb2312'
        'gbk'
        'gb18030'
        'utf-8'
        'ascii'

    编码注释：
        在源文件的第一行或第二行写入如下格式的内容
        # -*- coding:gbk -*-
        或
        # -*- coding:utf-8 -*-
        是告诉python解释执行器当前文件的编码是什么

练习3：
    1.修改原来的学生管理系统的代码，将其分为模块
      建议：
          1.把显示菜单放在一个模块内
          2.把对学生的操作放在一个模块内
          3.把主事件循环while True 选择输入放在一个模块内
    2.在菜单上添加两个功能：
        9）保存学生信息到文件（si.txt）
        10)从文件中读取数据（si.txt）
        建议用'逗号'分隔数据：
            #file: si.txt
             xiaozhang,21,98
             xiaoli,22,100
             ...
    
        
            
