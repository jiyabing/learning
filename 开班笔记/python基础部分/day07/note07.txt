可迭代对象（iterable）：
    可以依次获取数据元素的对象

for 语句（循环语句）
    作用：
        用来遍历可迭代对象的数据元素
    语法：
        for 变量列表 in 可迭代对象：
            语句块1...
        else:
            语句块2...
    语法说明：
        1.可迭代对象每次提供一个元素依次赋值给变量列表中的变量，赋值完毕后执行语句块
          1，重复执行次步骤
        2.当可迭代对象不能够提供数据时，执行else子句部分的语句块2，然后退出循环
        3.else子句部分可以省略
        4.当在语句内部用break终止循环时，else子句部分语句块2不会执行
    示例见：
        code内的for.py, for_break.py

练习1
    写程序，任意输入一行字符串，打印这个字符串内有多少个空格（要求用for语句）


range函数
    作用：
        用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）
    调用格式：
        range(stop)
        从零开始，每次生成一个整数后加1操作，直到stop为止（不包含stop）

        range(start,stop[,step])
        从start开始，每次生成一个整数后移动step,直到stop为止（不含stop，
        且step可以为负整数）
    示例：
        range(4)  #生成0 1 2 3
        range(3,6) #生成3 4 5
        range(1,10,2) #生成1 3 5 7 9
        range(5,0，-2) #生成5 3 1
        range(4,1)   #空
     见range.py

for 语句嵌套
    示意：
        for x in 'abc':
            for y in 'xyz':
                print(x+y)

练习2
    用for循环嵌套打印如下矩形：
        输入一个数n(10以内)，代表矩形的宽度和高度
        如：
            输入：5
        打印如下：
        1 2 3 4 5
        2 3 4 5 6
        3 4 5 6 7
        4 5 6 7 8
        5 6 7 8 9
    见code内的lianxi2.py

continue 语句
    作用：
        用于循环语句（while,for语句）中，不再执行本次循环内continue之后的语句，
        重新开始一次新的循环
    说明：
        1.在while语句中执行continue语句，将直接跳转到while语句的真值表达式处重新
          判断循环条件
        2.在for语句中执行continue语句，将会从可迭代对象中取下一个元素，绑定变量
          后再次进行循环
    示例见：
        continue.py

练习3：
    写一个程序，求1-100之间所有不能被5，7，11整除的数的和
    见code内的lianxi3.py

python3中的序列：
    字符串   str
    列表     list
    元组     tuple
    字节串   bytes
    字节数组 bytearray

列表 list
    定义：
        列表是由一系列元素组成的，元素与元素之间没有任何的关联关系，但他们之间有
        先后顺序关系
        列表是一种容器
        列表是一种序列
        列表是可以被改变的序列
    创建空列表的字面值：
        l = []
    创建非空列表的字面值
        l = [1,2,3]
        l = ['a','b','c']
        l = [1,'a',2.3,[1,2,3],4]

    列表的构造函数 list
    list()           #生成一个空列表
    list(iterable)   #用可迭代对象创建一个列表
        示例：
            >>>list()
            []
            >>>list('hello')
            ['h','e','l','l','o']

    列表的运算符：
        运算符：
            +   用于拼接列表
                x = [1,2,3]
                y = [4,5,6]
                z = x+y   #z = [1,2,3,4,5,6]                

            +=  用原列表与右侧列表拼接，并用变量重新绑定列表

            *   生成重复的列表
                x = [1,2]
                y = x*3  #y = [1,2,1,2,1,2]

            *=  生成重复的列表，并给原列表赋值

    列表的比较运算
        运算符：
            >  >= <  <=  ==  != 
        同字符串的比较一致

练习4
    输入一些行文字，将这些行文字保存在一个列表L中，当输入空行时结束输入，
    并打印列表L
	见code内的lianxi4.py

练习5
    1.将昨天的星星题用for循环写一遍
    2.输入一个unicode的开始值，用变量begin绑定
      输入一个unicode的结束值，用变量end绑定
          打印开始值至结束值所对应的文字，生成字符串并打印
    3.输入一个整数（代表树干的高度）
        打印如下一棵圣诞树
        输入：2
         *
        ***
         *
         *
        输入：3
          *
         ***
        *****
          *
          *
          *
    4.输入一个整数（代表树干的高度）
        打印如下一棵圣诞树
        输入：3
          1
         222
        33333
          *
          *
          *
    5.输入一个正整数，打印这个数是否是素数（只能被1和自身整除的整数，1除外）
	见code内的lianxi5.py



