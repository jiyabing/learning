元组 tuple
    元组是不可改变的序列，同list一样，元组可以存放任意类型的元素
    表示方法：
        用小括号（）括起来，单个元素括起来后加逗号（，）区分单个
        对象还是元组
    创建空元组的字面值
        t = ()
    创建非空元组字面值
        t = (1,2,3)
        t = 1,
        t = (1,)
        t = 1,2,3
    元组的错误示例：
        t = (20)
        x,y,z = 100,200,300  #序列赋值
        x,y,z = (100,200,300) #序列赋值
        x,y,z = [100,200,300] #序列赋值
        x,y,z = 'abc'         #序列赋值

type(x) 函数用来返回 x 的类型

    元组的构造（创建）函数tuple
        tuple()          生成一个空元组，等同于（）
        tuple(iterable)  用可迭代对象生成一个元组

    元组的运算：
        元组的元素同列表的运算方式一致
        算术运算：
            + += * *=
        比较运算：
            > >= < <= == !=
            in / not in 运算

    元组的索引和切片等同于列表的索引和切片
    元组的切片返回一个元组
    元组不能索引赋值和切片赋值

    元组的方法：
        t.count(value)  返回元素个数
        t.index(value[,start,stop]) 返回元素的索引

序列相关的函数：
    len(x)
    max(x)
    min(x)
    sum(x)
    any(x)
    all(x)
    str(obj)  将对象序列化为字符串
    list(iterable)
    tuple(iterable)
    reversed(seq)  返回反向顺序的迭代对象
    sorted(iterable,reverse=False) 返回已排序的列表

字典 dict
    字典是一种可变的容器，可以存储任意类型的数据
    字典中的每个数据都是用‘键’进行索引的
    字典中的数据没有先后顺序关系，字典的存储是无序的
    字典中的数据以键（key）-值（value）对的形式进行映射存储
    字典的键不能重复，且只能用“不可变类型”作为字典的键

    字典的字面值的表示方式
        字典的表示方式以{}括起来，以冒号（:）分割键-值对，各键-值
        对之间用逗号分隔开

    创建空字典：
        d = {} #d绑定空字典

    创建非空字典：
        d = {'name':'tarena','age':16}
        d = {'year':2018,'month':4,'day':12}
    字典的构成函数 dict
        dict() 生成一个空字典，等同于{}
        dict(iterable)  用可迭代对象初始化一个字典
        dict(**kwargs)  用命名关键字传参形式生成一个字典
        示例：
            d = dict()
            d = dict([('name','tarena'),('age',15)])
            d = dict(name='tarena',age=15)

    字典的键为不可变类型：
        bool, int, float, complex, str, tuple, frozenset(固定集合)
        bytes(字节串)， None

    可变的类型（不能充当字典的键）
        list, dict, set(集合), bytearray(字节数组)

    字典的基本操作：
        键索引：
            语法：
                字典[键]
            示例：
                >>>d = {'name':'tarena','age':16}
                >>>d['name']
                'tarena'
                >>>d['age']
                15
        添加/修改键值对：
            字典[键] = 值对象
            示例：
                >>>d = {}
                >>>d['name'] = 'tarena'
                >>>d
                {'name':'tarena'}

        删除字典元素 del语句
            语法：
                del 字典[键]
            示例：
                >>>d = {'name':'tarena','age':16}
                >>>del d['age'] #'age'键被删除
                >>>d
                {'name':'tarena'}

练习：
    1.算出100-999以内的水仙花数
      水仙花数是指百位的3次方，加上十位的3次方，加上个位的3次方
      等于原来的数字
      例如：
        153=1**3+5**3+3**3
        for baiwei in range(1,10):
            for shiwei in range(10):
                for gewei in range(10):
                    x = baiwei *100 + shiwei * 10 + gewei
                    if x = baiwei ** 3 + shiwei ** 3 + gewei **3:
                        print(x)
                    

    2.任意输入一些大于零，存于列表L中，当输入-1时结束输入
      L = [1,3,5,3,7,9,3,7,6,5]
      1）打印出这些数
      2）打印出这些数的和
      3）去掉列表L中重复第二次或之后出现的数，再次存到另一个列表L2
          L2 = [1,3,5,7,9,6]打印这些数
      4）打印L2列表中的数据的和
      5）将L列表中，出现两次的数村到另一个列表L3中
          L3 = [5,7]
      
                



    
